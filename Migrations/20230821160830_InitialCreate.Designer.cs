// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokeApi.Helpers;

#nullable disable

namespace PokeApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230821160830_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("PokeApi.Entities.Pokeman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pokemen");
                });

            modelBuilder.Entity("PokeApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "hspharic@gmail.com",
                            FirstName = "Hariharasudhan",
                            LastName = "Chandramurthy",
                            PasswordHash = "$2a$11$FKBUZcWA0UfmRbWwGVFyheLGHcLEPl4ox8.P61eiHWiYW7JZ8vuka",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "karthikkannanmari@gmail.com",
                            FirstName = "Karthikkannan",
                            LastName = "Marimuthu",
                            PasswordHash = "$2a$11$FKBUZcWA0UfmRbWwGVFyheLGHcLEPl4ox8.P61eiHWiYW7JZ8vuka",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = "$2a$11$ShZyQTkna2/BBB41B8Qdf.aRl4lPVRCI8NLZ14jesg9J8Sl8XSu0K",
                            Role = 0
                        });
                });

            modelBuilder.Entity("PokeApi.Entities.UserFavorite", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PokemonName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PokemanId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "PokemonName");

                    b.HasIndex("PokemanId");

                    b.ToTable("UserFavorites");
                });

            modelBuilder.Entity("PokeApi.Entities.UserFavorite", b =>
                {
                    b.HasOne("PokeApi.Entities.Pokeman", null)
                        .WithMany("UserFavorites")
                        .HasForeignKey("PokemanId");

                    b.HasOne("PokeApi.Entities.User", "User")
                        .WithMany("UserFavorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PokeApi.Entities.Pokeman", b =>
                {
                    b.Navigation("UserFavorites");
                });

            modelBuilder.Entity("PokeApi.Entities.User", b =>
                {
                    b.Navigation("UserFavorites");
                });
#pragma warning restore 612, 618
        }
    }
}
